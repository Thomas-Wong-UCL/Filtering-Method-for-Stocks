def ocm = Max(open, close);
def ocmin = Min(open, close);
def difference = ocm - ocmin;
def bn = BarNumber();

input n = 14;

def slope_total;
if bn == 1 or bn < n
then {
    slope_total = 0;
} else {
    slope_total =
    fold i = 1 to (n + 1)
    with p
    do p + ( (difference[1] - getvalue(difference[2], i)) / i );
}

def slope_avg = Exp(slope_total / n);
def rescaled_slope_avg = 1/(1 + Exp(-1*slope_avg));

#---------------------------------------------------------------


def length = 30;

def total_avg_volume = (Sum(volume, length) - Sum(volume, 3))/(length - 3);

def avg_volume = (volume + volume[1] + volume[2] + volume[3] + volume[4])/5;

def avg_volume_1 = (volume + volume[1] + volume[2])/3;

def decreasing_volume_check; 
if avg_volume / total_avg_volume > 1 
then {
decreasing_volume_check = 0;
} else {
decreasing_volume_check =1;
}


input m = 5;

def slope_total_2;

    slope_total_2 =
    fold j = 1 to (m + 1)
    with q
    do q + ( (avg_volume_1 - GetValue(avg_volume_1[1], j)) / j );


def slope_avg_2 = slope_total / n;

def volume_difference = decreasing_volume_check * slope_avg_2;

def decreasing_volume_difference_check; 
if volume_difference > 1 
then {
decreasing_volume_difference_check = 0;
} else {
decreasing_volume_difference_check =1;
}

def volume_difference_2 = decreasing_volume_difference_check * (volume_difference - volume_difference[2]) / 3;

def rescale_volume_1;
if Exp(volume_difference_2/total_avg_volume) == 1
then {rescale_volume_1 = 0;}
else {rescale_volume_1 = Exp(volume_difference_2/total_avg_volume);}


#---------------------------------------------------------------

input price = FundamentalType.CLOSE;
input aggregationPeriod = AggregationPeriod.DAY;
input length_2 = 12;
input averageType = AverageType.SIMPLE;

def boxheight = (high - low) / (high + low) + 0.5*absvalue(close/close[1]-1);
def combi = 0.60*MovingAverage(averageType, boxheight, length_2) +0.30*StDev(boxheight, length_2)+0.10*highest(boxheight, length_2);


#---------------------------------------------------------------

def rescale_1 = 1/(1 + 0.000000001*Exp(28*round(rescaled_slope_avg[1],3)));

def rescale_volume_2 = 1/(1+1000*Exp(-9*rescale_volume_1));

def rescale_Tight = 1/(1 + 0.001*Exp(84*combi));

def combined_value = (1/3)*rescale_1 + (1/3)*rescale_Tight + (1/3)*rescale_Tight;

AddLabel(Yes, combined_value, Color.White);
